# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-19 03:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('miscellaneous', '0001_initial'),
        ('participant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DroidBlitz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.IntegerField()),
                ('certificate', models.BooleanField(default=False, verbose_name='Given certificate')),
                ('verification', models.BooleanField(default=False, verbose_name='Verified')),
                ('round_one', models.IntegerField(blank=True, null=True, verbose_name='Round One Score')),
                ('qualify_round_one', models.BooleanField(default=False, verbose_name='Qualified Round One')),
                ('round_two', models.IntegerField(blank=True, null=True, verbose_name='Round Two Score')),
                ('qualify_round_two', models.BooleanField(default=False, verbose_name='Qualified Round Two')),
                ('round_three', models.IntegerField(blank=True, null=True, verbose_name='Round Three Score')),
                ('participant', models.ManyToManyField(help_text="<strong>Type in team member's name, mobile or e-mail to begin a search</strong><br>", related_name='team_droidblitz_related', to='participant.Participant', verbose_name='Team Members')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='miscellaneous.State')),
            ],
            options={
                'verbose_name_plural': 'Droid Blitz',
                'verbose_name': 'Droid Blitz',
            },
        ),
        migrations.CreateModel(
            name='Sheldon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.IntegerField()),
                ('certificate', models.BooleanField(default=False, verbose_name='Given certificate')),
                ('verification', models.BooleanField(default=False, verbose_name='Verified')),
                ('round_one', models.IntegerField(blank=True, null=True, verbose_name='Round One Score')),
                ('qualify_round_one', models.BooleanField(default=False, verbose_name='Qualified Round One')),
                ('round_two', models.IntegerField(blank=True, null=True, verbose_name='Round Two Score')),
                ('qualify_round_two', models.BooleanField(default=False, verbose_name='Qualified Round Two')),
                ('round_three', models.IntegerField(blank=True, null=True, verbose_name='Round Three Score')),
                ('participant', models.ManyToManyField(help_text="<strong>Type in team member's name, mobile or e-mail to begin a search</strong><br>", related_name='team_sheldon_related', to='participant.Participant', verbose_name='Team Members')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='miscellaneous.State')),
            ],
            options={
                'verbose_name_plural': 'S.H.E.L.D.O.N.',
                'verbose_name': 'S.H.E.L.D.O.N.',
            },
        ),
        migrations.CreateModel(
            name='Sherlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.IntegerField()),
                ('certificate', models.BooleanField(default=False, verbose_name='Given certificate')),
                ('verification', models.BooleanField(default=False, verbose_name='Verified')),
                ('round_one', models.IntegerField(blank=True, null=True, verbose_name='Round One Score')),
                ('qualify_round_one', models.BooleanField(default=False, verbose_name='Qualified Round One')),
                ('round_two', models.IntegerField(blank=True, null=True, verbose_name='Round Two Score')),
                ('qualify_round_two', models.BooleanField(default=False, verbose_name='Qualified Round Two')),
                ('round_three', models.IntegerField(blank=True, null=True, verbose_name='Round Three Score')),
                ('participant', models.ManyToManyField(help_text="<strong>Type in team member's name, mobile or e-mail to begin a search</strong><br>", related_name='team_sherlock_related', to='participant.Participant', verbose_name='Team Members')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='miscellaneous.State')),
            ],
            options={
                'verbose_name_plural': 'Sherlock',
                'verbose_name': 'Sherlock',
            },
        ),
        migrations.CreateModel(
            name='Summit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.IntegerField()),
                ('certificate', models.BooleanField(default=False, verbose_name='Given certificate')),
                ('verification', models.BooleanField(default=False, verbose_name='Verified')),
                ('round_one', models.IntegerField(blank=True, null=True, verbose_name='Round One Score')),
                ('qualify_round_one', models.BooleanField(default=False, verbose_name='Qualified Round One')),
                ('round_two', models.IntegerField(blank=True, null=True, verbose_name='Round Two Score')),
                ('qualify_round_two', models.BooleanField(default=False, verbose_name='Qualified Round Two')),
                ('round_three', models.IntegerField(blank=True, null=True, verbose_name='Round Three Score')),
                ('participant', models.ManyToManyField(help_text="<strong>Type in team member's name, mobile or e-mail to begin a search</strong><br>", related_name='team_summit_related', to='participant.Participant', verbose_name='Team Members')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='miscellaneous.State')),
            ],
            options={
                'verbose_name_plural': 'Summit',
                'verbose_name': 'Summit',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pin', models.IntegerField()),
                ('certificate', models.BooleanField(default=False, verbose_name='Given certificate')),
                ('verification', models.BooleanField(default=False, verbose_name='Verified')),
                ('round_one', models.IntegerField(blank=True, null=True, verbose_name='Round One Score')),
                ('qualify_round_one', models.BooleanField(default=False, verbose_name='Qualified Round One')),
                ('round_two', models.IntegerField(blank=True, null=True, verbose_name='Round Two Score')),
                ('qualify_round_two', models.BooleanField(default=False, verbose_name='Qualified Round Two')),
                ('round_three', models.IntegerField(blank=True, null=True, verbose_name='Round Three Score')),
                ('participant', models.ManyToManyField(help_text="<strong>Type in team member's name, mobile or e-mail to begin a search</strong><br>", related_name='team_warehouse_related', to='participant.Participant', verbose_name='Team Members')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='miscellaneous.State')),
            ],
            options={
                'verbose_name_plural': 'Warehouse',
                'verbose_name': 'Warehouse',
            },
        ),
    ]
